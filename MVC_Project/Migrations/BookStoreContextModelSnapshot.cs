// <auto-generated />
using System;
using MVC_Project;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_Project.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    partial class BookStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC_Project.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorName = "Sandra Cisneros",
                            Biography = "Sandra Cisneros is an American writer best known for her acclaimed first novel The House on Mango Street.",
                            BirthDate = new DateTime(1954, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States",
                            ImageUrl = "/images/author/Sandra_Cisneros.jpg"
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorName = "Gabriel García Márquez",
                            Biography = "Gabriel García Márquez was a Colombian novelist, short-story writer, screenwriter, and journalist, known affectionately as Gabo throughout Latin America. He is considered one of the most significant authors of the 20th century.",
                            BirthDate = new DateTime(1927, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Colombia",
                            ImageUrl = "/images/author/Gabriel_Garcia_Marquez.jpg"
                        },
                        new
                        {
                            AuthorId = 3,
                            AuthorName = "Sarah J. Maas",
                            Biography = "Sarah J. Maas is the #1 New York Times and internationally bestselling author of the Crescent City, A Court of Thorns and Roses, and the Throne of Glass series. Her books have sold more than twelve million copies and are published in thirty-seven languages. A New York native, Sarah lives in Philadelphia with her husband, son, and dog. To find out more, visit sarahjmaas.com or follow @therealsjmaas on Instagram.",
                            BirthDate = new DateTime(1986, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States",
                            ImageUrl = "/images/author/Sarah_ J_Maas.jpeg"
                        },
                        new
                        {
                            AuthorId = 4,
                            AuthorName = "Leigh Bardugo",
                            Biography = "Leigh Bardugo is an American fantasy author. She is best known for her young adult Grishaverse novels, which include the Shadow and Bone trilogy and the Six of Crows and King of Scars duologies. She also received acclaim for her paranormal fantasy adult debut, Ninth House",
                            BirthDate = new DateTime(1975, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States",
                            ImageUrl = "/images/author/Leigh_Bardugo.jpeg"
                        },
                        new
                        {
                            AuthorId = 5,
                            AuthorName = "Cassandra Clare",
                            Biography = "Judith Lewis, better known by her pen name Cassandra Clare, is an American author of young adult fiction, best known for her bestselling series The Mortal Instruments.",
                            BirthDate = new DateTime(1975, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States",
                            ImageUrl = "/images/author/Cassandra_Clare.jpeg"
                        },
                        new
                        {
                            AuthorId = 6,
                            AuthorName = "J.K. Rowling",
                            Biography = "J.K. Rowling is a British author, philanthropist, film producer, television producer, and screenwriter. She is best known for writing the Harry Potter fantasy series, which has won multiple awards and sold more than 500 million copies, becoming the best-selling book series in history.",
                            BirthDate = new DateTime(1965, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United Kingdom",
                            ImageUrl = "/images/author/jk rowling.jpg"
                        },
                        new
                        {
                            AuthorId = 7,
                            AuthorName = "Stephen King",
                            Biography = "Stephen King is an American author of horror, supernatural fiction, suspense, crime, science-fiction, and fantasy novels. His books have sold more than 350 million copies, and many have been adapted into films, television series, miniseries, and comic books.",
                            BirthDate = new DateTime(1947, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States",
                            ImageUrl = "/images/author/Stephen_king.jpg"
                        },
                        new
                        {
                            AuthorId = 8,
                            AuthorName = "Haruki Murakami",
                            Biography = "Haruki Murakami is a Japanese writer. His books and stories have been bestsellers in Japan and internationally, with his work being translated into 50 languages and selling millions of copies outside his native country.",
                            BirthDate = new DateTime(1949, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Japan",
                            ImageUrl = "/images/author/Haruki_Murakami.jpeg"
                        },
                        new
                        {
                            AuthorId = 9,
                            AuthorName = "Margaret Atwood",
                            Biography = "Margaret Atwood is a Canadian poet, novelist, literary critic, essayist, inventor, teacher, and environmental activist. She has published over 17 books of poetry, 16 novels, 10 books of non-fiction, 8 collections of short fiction, 8 children's books, and 1 graphic novel.",
                            BirthDate = new DateTime(1939, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Canada",
                            ImageUrl = "/images/author/Margaret_Atwood.jpg"
                        },
                        new
                        {
                            AuthorId = 10,
                            AuthorName = "George R.R. Martin",
                            Biography = "George R.R. Martin is an American novelist and short story writer, screenwriter, and television producer. He is best known for his series of epic fantasy novels, A Song of Ice and Fire, which was adapted into the HBO series Game of Thrones.",
                            BirthDate = new DateTime(1948, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States",
                            ImageUrl = "/images/author/George_R_R_Martin.jpg"
                        },
                        new
                        {
                            AuthorId = 11,
                            AuthorName = "Toni Morrison",
                            Biography = "Toni Morrison was an American novelist, essayist, editor, teacher, and professor emeritus at Princeton University. She won the Pulitzer Prize and the American Book Award in 1988 for Beloved.",
                            BirthDate = new DateTime(1931, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States",
                            ImageUrl = "/images/author/Toni_Morrison.jpg"
                        },
                        new
                        {
                            AuthorId = 12,
                            AuthorName = "Chimamanda Ngozi Adichie",
                            Biography = "Chimamanda Ngozi Adichie is a Nigerian writer whose works range from novels to short stories to nonfiction. She was described in The Times Literary Supplement as 'the most prominent' of a 'procession of critically acclaimed young anglophone authors [which] is succeeding in attracting a new generation of readers to African literature'.",
                            BirthDate = new DateTime(1977, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Nigeria",
                            ImageUrl = "/images/author/Chimamanda_Ngozi_Adichie.jpg"
                        },
                        new
                        {
                            AuthorId = 13,
                            AuthorName = "Neil Gaiman",
                            Biography = "Neil Gaiman is an English author of short fiction, novels, comic books, graphic novels, nonfiction, audio theatre, and films. His works include the comic book series The Sandman and novels Stardust, American Gods, Coraline, and The Graveyard Book.",
                            BirthDate = new DateTime(1960, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United Kingdom",
                            ImageUrl = "/images/author/Neil_Gaiman.jpg"
                        },
                        new
                        {
                            AuthorId = 14,
                            AuthorName = "Virginia Woolf",
                            Biography = "Virginia Woolf was an English writer, considered one of the most important modernist 20th-century authors and also a pioneer in the use of stream of consciousness as a narrative device. Woolf was a significant figure in London literary society and a member of the Bloomsbury Group.",
                            BirthDate = new DateTime(1882, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United Kingdom",
                            ImageUrl = "/images/author/Virginia _Wolf.jpeg"
                        },
                        new
                        {
                            AuthorId = 15,
                            AuthorName = "Hermann Hesse",
                            Biography = "Hermann Hesse was a German-Swiss poet, novelist, and painter. His best-known works include Steppenwolf, Siddhartha, and The Glass Bead Game, each of which explores an individual's search for authenticity, self-knowledge, and spirituality.",
                            BirthDate = new DateTime(1877, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Germany",
                            ImageUrl = "/images/author/Hermman_Hesse.jpg"
                        },
                        new
                        {
                            AuthorId = 16,
                            AuthorName = "Agatha Christie",
                            Biography = "Agatha Christie was an English writer known for her sixty-six detective novels and fourteen short story collections, particularly those revolving around fictional detectives Hercule Poirot and Miss Marple.",
                            BirthDate = new DateTime(1890, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United Kingdom",
                            ImageUrl = "/images/author/Agatha_Christie.jpg"
                        },
                        new
                        {
                            AuthorId = 17,
                            AuthorName = "Octavia E. Butler",
                            Biography = "Octavia E. Butler was an American science fiction writer. A multiple recipient of both the Hugo and Nebula awards, she became in 1995 the first science-fiction writer to receive a MacArthur Fellowship.",
                            BirthDate = new DateTime(1947, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States",
                            ImageUrl = "/images/author/Octivia_Butler.jpeg"
                        },
                        new
                        {
                            AuthorId = 18,
                            AuthorName = "Ernest Hemingway",
                            Biography = "Ernest Hemingway was an American novelist, short-story writer, journalist, and sportsman. His economical and understated style—which he termed the iceberg theory—had a strong influence on 20th-century fiction, while his adventurous lifestyle and his public image brought him admiration from later generations.",
                            BirthDate = new DateTime(1899, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United States",
                            ImageUrl = "/images/author/Ernest_Hemingway.jpg"
                        },
                        new
                        {
                            AuthorId = 19,
                            AuthorName = "J.R.R. Tolkien",
                            Biography = "J.R.R. Tolkien was an English writer, poet, philologist, and university professor. He was best known as the author of the classic high fantasy works The Hobbit, The Lord of the Rings, and The Silmarillion.",
                            BirthDate = new DateTime(1892, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "United Kingdom",
                            ImageUrl = "/images/author/JRR Tolkin.jpeg"
                        });
                });

            modelBuilder.Entity("MVC_Project.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isOutOfStock")
                        .HasColumnType("bit");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            ImageUrl = "/images/book/the_house_on_mango_street.jpeg",
                            Price = 10.99m,
                            QuantityAvailable = 50,
                            Title = "The House on Mango Street"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            ImageUrl = "/images/book/caramelo.jpeg",
                            Price = 12.50m,
                            QuantityAvailable = 30,
                            Title = "Caramelo"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 1,
                            ImageUrl = "/images/book/woman_hollering_creek.jpeg",
                            Price = 9.99m,
                            QuantityAvailable = 40,
                            Title = "Woman Hollering Creek and Other Stories"
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 2,
                            ImageUrl = "/images/book/one_hundred_years_of_solitude.jpeg",
                            Price = 12.50m,
                            QuantityAvailable = 30,
                            Title = "One Hundred Years of Solitude"
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 3,
                            ImageUrl = "/images/book/throne_of_glass.jpeg",
                            Price = 11.99m,
                            QuantityAvailable = 35,
                            Title = "Throne of Glass"
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 3,
                            ImageUrl = "/images/book/a_court_of_thorns_and_roses.jpeg",
                            Price = 14.99m,
                            QuantityAvailable = 25,
                            Title = "A Court of Thorns and Roses"
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 3,
                            ImageUrl = "/images/book/crescent_city.jpeg",
                            Price = 16.99m,
                            QuantityAvailable = 20,
                            Title = "Crescent City: House of Earth and Blood"
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 4,
                            ImageUrl = "/images/book/shadow_and_bone.jpeg",
                            Price = 13.99m,
                            QuantityAvailable = 30,
                            Title = "Shadow and Bone"
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 4,
                            ImageUrl = "/images/book/six_of_crows.jpeg",
                            Price = 15.99m,
                            QuantityAvailable = 25,
                            Title = "Six of Crows"
                        },
                        new
                        {
                            BookId = 10,
                            AuthorId = 4,
                            ImageUrl = "/images/book/king_of_scars.jpeg",
                            Price = 14.50m,
                            QuantityAvailable = 28,
                            Title = "King of Scars"
                        },
                        new
                        {
                            BookId = 11,
                            AuthorId = 5,
                            ImageUrl = "/images/book/city_of_bones.jpeg",
                            Price = 11.99m,
                            QuantityAvailable = 40,
                            Title = "City of Bones"
                        },
                        new
                        {
                            BookId = 12,
                            AuthorId = 5,
                            ImageUrl = "/images/book/clockwork_angel.jpeg",
                            Price = 10.99m,
                            QuantityAvailable = 35,
                            Title = "Clockwork Angel"
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 5,
                            ImageUrl = "/images/book/lady_midnight.jpeg",
                            Price = 12.50m,
                            QuantityAvailable = 30,
                            Title = "Lady Midnight"
                        },
                        new
                        {
                            BookId = 14,
                            AuthorId = 13,
                            ImageUrl = "/images/book/american_gods.jpeg",
                            Price = 15.99m,
                            QuantityAvailable = 20,
                            Title = "American Gods"
                        },
                        new
                        {
                            BookId = 15,
                            AuthorId = 13,
                            ImageUrl = "/images/book/stardust.jpeg",
                            Price = 12.99m,
                            QuantityAvailable = 25,
                            Title = "Stardust"
                        },
                        new
                        {
                            BookId = 16,
                            AuthorId = 14,
                            ImageUrl = "/images/book/to_the_lighthouse.jpeg",
                            Price = 9.99m,
                            QuantityAvailable = 15,
                            Title = "To the Lighthouse"
                        },
                        new
                        {
                            BookId = 17,
                            AuthorId = 14,
                            ImageUrl = "/images/book/mrs_dalloway.jpeg",
                            Price = 10.99m,
                            QuantityAvailable = 18,
                            Title = "Mrs. Dalloway"
                        },
                        new
                        {
                            BookId = 18,
                            AuthorId = 15,
                            ImageUrl = "/images/book/siddhartha.jpeg",
                            Price = 8.99m,
                            QuantityAvailable = 22,
                            Title = "Siddhartha"
                        },
                        new
                        {
                            BookId = 19,
                            AuthorId = 15,
                            ImageUrl = "/images/book/steppenwolf.jpeg",
                            Price = 11.50m,
                            QuantityAvailable = 20,
                            Title = "Steppenwolf"
                        },
                        new
                        {
                            BookId = 20,
                            AuthorId = 16,
                            ImageUrl = "/images/book/murder_on_the_orient_express.jpeg",
                            Price = 7.99m,
                            QuantityAvailable = 30,
                            Title = "Murder on the Orient Express"
                        },
                        new
                        {
                            BookId = 21,
                            AuthorId = 16,
                            ImageUrl = "/images/book/and_then_there_were_none.jpeg",
                            Price = 6.99m,
                            QuantityAvailable = 28,
                            Title = "And Then There Were None"
                        },
                        new
                        {
                            BookId = 22,
                            AuthorId = 17,
                            ImageUrl = "/images/book/kindred.jpeg",
                            Price = 13.99m,
                            QuantityAvailable = 20,
                            Title = "Kindred"
                        },
                        new
                        {
                            BookId = 23,
                            AuthorId = 17,
                            ImageUrl = "/images/book/parable_of_the_sower.jpeg",
                            Price = 14.50m,
                            QuantityAvailable = 15,
                            Title = "Parable of the Sower"
                        },
                        new
                        {
                            BookId = 24,
                            AuthorId = 18,
                            ImageUrl = "/images/book/the_old_man_and_the_sea.jpeg",
                            Price = 8.99m,
                            QuantityAvailable = 25,
                            Title = "The Old Man and the Sea"
                        },
                        new
                        {
                            BookId = 25,
                            AuthorId = 18,
                            ImageUrl = "/images/book/a_farewell_to_arms.jpeg",
                            Price = 10.50m,
                            QuantityAvailable = 20,
                            Title = "A Farewell to Arms"
                        },
                        new
                        {
                            BookId = 26,
                            AuthorId = 18,
                            ImageUrl = "/images/book/for_whom_the_bell_tolls.jpeg",
                            Price = 12.99m,
                            QuantityAvailable = 30,
                            Title = "For Whom the Bell Tolls"
                        },
                        new
                        {
                            BookId = 27,
                            AuthorId = 19,
                            ImageUrl = "/images/book/the_hobbit.jpeg",
                            Price = 9.99m,
                            QuantityAvailable = 40,
                            Title = "The Hobbit"
                        },
                        new
                        {
                            BookId = 28,
                            AuthorId = 19,
                            ImageUrl = "/images/book/the_fellowship_of_the_ring.jpeg",
                            Price = 11.50m,
                            QuantityAvailable = 35,
                            Title = "The Fellowship of the Ring"
                        },
                        new
                        {
                            BookId = 29,
                            AuthorId = 19,
                            ImageUrl = "/images/book/the_silmarillion.jpeg",
                            Price = 14.50m,
                            QuantityAvailable = 30,
                            Title = "The Silmarillion"
                        },
                        new
                        {
                            BookId = 30,
                            AuthorId = 6,
                            ImageUrl = "/images/book/harry_potter_and_the_philosophers_stone.jpeg",
                            Price = 12.99m,
                            QuantityAvailable = 25,
                            Title = "Harry Potter and the Philosopher's Stone"
                        },
                        new
                        {
                            BookId = 31,
                            AuthorId = 6,
                            ImageUrl = "/images/book/harry_potter_and_the_chamber_of_secrets.jpeg",
                            Price = 13.99m,
                            QuantityAvailable = 20,
                            Title = "Harry Potter and the Chamber of Secrets"
                        },
                        new
                        {
                            BookId = 32,
                            AuthorId = 6,
                            ImageUrl = "/images/book/harry_potter_and_the_prisoner_of_azkaban.jpeg",
                            Price = 14.99m,
                            QuantityAvailable = 30,
                            Title = "Harry Potter and the Prisoner of Azkaban"
                        },
                        new
                        {
                            BookId = 33,
                            AuthorId = 6,
                            ImageUrl = "/images/book/harry_potter_and_the_goblet_of_fire.jpeg",
                            Price = 15.99m,
                            QuantityAvailable = 28,
                            Title = "Harry Potter and the Goblet of Fire"
                        },
                        new
                        {
                            BookId = 34,
                            AuthorId = 7,
                            ImageUrl = "/images/book/the_shining.jpeg",
                            Price = 11.99m,
                            QuantityAvailable = 20,
                            Title = "The Shining"
                        },
                        new
                        {
                            BookId = 35,
                            AuthorId = 7,
                            ImageUrl = "/images/book/it.jpeg",
                            Price = 14.50m,
                            QuantityAvailable = 22,
                            Title = "It"
                        },
                        new
                        {
                            BookId = 36,
                            AuthorId = 8,
                            ImageUrl = "/images/book/norwegian_wood.jpeg",
                            Price = 12.99m,
                            QuantityAvailable = 18,
                            Title = "Norwegian Wood"
                        },
                        new
                        {
                            BookId = 37,
                            AuthorId = 8,
                            ImageUrl = "/images/book/kafka_on_the_shore.jpeg",
                            Price = 13.50m,
                            QuantityAvailable = 20,
                            Title = "Kafka on the Shore"
                        },
                        new
                        {
                            BookId = 38,
                            AuthorId = 9,
                            ImageUrl = "/images/book/the_testaments.jpeg",
                            Price = 15.99m,
                            QuantityAvailable = 22,
                            Title = "The Testaments"
                        },
                        new
                        {
                            BookId = 39,
                            AuthorId = 9,
                            ImageUrl = "/images/book/oryx_and_crake.jpeg",
                            Price = 14.50m,
                            QuantityAvailable = 20,
                            Title = "Oryx and Crake"
                        },
                        new
                        {
                            BookId = 40,
                            AuthorId = 10,
                            ImageUrl = "/images/book/a_clash_of_kings.jpeg",
                            Price = 12.99m,
                            QuantityAvailable = 25,
                            Title = "A Clash of Kings"
                        },
                        new
                        {
                            BookId = 41,
                            AuthorId = 10,
                            ImageUrl = "/images/book/a_storm_of_swords.jpeg",
                            Price = 14.50m,
                            QuantityAvailable = 30,
                            Title = "A Storm of Swords"
                        },
                        new
                        {
                            BookId = 42,
                            AuthorId = 10,
                            ImageUrl = "/images/book/a_feast_for_crows.jpeg",
                            Price = 13.99m,
                            QuantityAvailable = 28,
                            Title = "A Feast for Crows"
                        },
                        new
                        {
                            BookId = 43,
                            AuthorId = 11,
                            ImageUrl = "/images/book/beloved.jpeg",
                            Price = 11.99m,
                            QuantityAvailable = 20,
                            Title = "Beloved"
                        },
                        new
                        {
                            BookId = 44,
                            AuthorId = 12,
                            ImageUrl = "/images/book/americanah.jpeg",
                            Price = 13.50m,
                            QuantityAvailable = 25,
                            Title = "Americanah"
                        });
                });

            modelBuilder.Entity("MVC_Project.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique()
                        .HasFilter("[ApplicationUserId] IS NOT NULL");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = "1",
                            Address = "123 Main St, Anytown, USA",
                            Email = "john_doe@example.com",
                            FullName = "John Doe",
                            Password = "password123",
                            PhoneNumber = "123-456-7890",
                            Username = "john_doe"
                        },
                        new
                        {
                            CustomerId = "2",
                            Address = "456 Oak St, Anycity, USA",
                            Email = "jane_smith@example.com",
                            FullName = "Jane Smith",
                            Password = "password456",
                            PhoneNumber = "987-654-3210",
                            Username = "jane_smith"
                        },
                        new
                        {
                            CustomerId = "3",
                            Address = "789 Oak St, Anytown, USA",
                            Email = "mike_jackson@example.com",
                            FullName = "Mike Jackson",
                            Password = "strongpwd456",
                            PhoneNumber = "555-123-4567",
                            Username = "mike_jackson"
                        },
                        new
                        {
                            CustomerId = "4",
                            Address = "321 Pine St, Anytown, USA",
                            Email = "sarah_adams@example.com",
                            FullName = "Sarah Adams",
                            Password = "mypassword789",
                            PhoneNumber = "444-222-3333",
                            Username = "sarah_adams"
                        },
                        new
                        {
                            CustomerId = "5",
                            Address = "567 Maple St, Anytown, USA",
                            Email = "alex_miller@example.com",
                            FullName = "Alex Miller",
                            Password = "alexpass123",
                            PhoneNumber = "111-999-8888",
                            Username = "alex_miller"
                        },
                        new
                        {
                            CustomerId = "6",
                            Address = "246 Birch St, Anytown, USA",
                            Email = "emily_taylor@example.com",
                            FullName = "Emily Taylor",
                            Password = "password987",
                            PhoneNumber = "777-666-5555",
                            Username = "emily_taylor"
                        },
                        new
                        {
                            CustomerId = "7",
                            Address = "135 Cedar St, Anytown, USA",
                            Email = "ryan_carter@example.com",
                            FullName = "Ryan Carter",
                            Password = "carterpass456",
                            PhoneNumber = "999-777-6666",
                            Username = "ryan_carter"
                        },
                        new
                        {
                            CustomerId = "8",
                            Address = "753 Walnut St, Anytown, USA",
                            Email = "lisa_wilson@example.com",
                            FullName = "Lisa Wilson",
                            Password = "secure1234",
                            PhoneNumber = "222-333-4444",
                            Username = "lisa_wilson"
                        },
                        new
                        {
                            CustomerId = "9",
                            Address = "987 Birch St, Anytown, USA",
                            Email = "david_thompson@example.com",
                            FullName = "David Thompson",
                            Password = "davidpass789",
                            PhoneNumber = "888-555-2222",
                            Username = "david_thompson"
                        },
                        new
                        {
                            CustomerId = "10",
                            Address = "369 Oak St, Anytown, USA",
                            Email = "sophia_harris@example.com",
                            FullName = "Sophia Harris",
                            Password = "harrissafe123",
                            PhoneNumber = "777-888-9999",
                            Username = "sophia_harris"
                        },
                        new
                        {
                            CustomerId = "11",
                            Address = "456 Pine St, Othertown, Canada",
                            Email = "mark_johnson@example.com",
                            FullName = "Mark Johnson",
                            Password = "markpass123",
                            PhoneNumber = "111-222-3333",
                            Username = "mark_johnson"
                        },
                        new
                        {
                            CustomerId = "12",
                            Address = "789 Maple St, Anothertown, Australia",
                            Email = "emily_smith@example.com",
                            FullName = "Emily Smith",
                            Password = "emilypass456",
                            PhoneNumber = "444-555-6666",
                            Username = "emily_smith"
                        },
                        new
                        {
                            CustomerId = "13",
                            Address = "987 Elm St, Yetanothertown, United Kingdom",
                            Email = "alexander_brown@example.com",
                            FullName = "Alexander Brown",
                            Password = "brownsecure123",
                            PhoneNumber = "777-888-9999",
                            Username = "alexander_brown"
                        },
                        new
                        {
                            CustomerId = "14",
                            Address = "321 Cedar St, Differenttown, Germany",
                            Email = "olivia_davis@example.com",
                            FullName = "Olivia Davis",
                            Password = "oliviapass789",
                            PhoneNumber = "888-999-0000",
                            Username = "olivia_davis"
                        },
                        new
                        {
                            CustomerId = "15",
                            Address = "654 Oak St, Anotherdifferenttown, France",
                            Email = "william_taylor@example.com",
                            FullName = "William Taylor",
                            Password = "williampass123",
                            PhoneNumber = "222-333-4444",
                            Username = "william_taylor"
                        });
                });

            modelBuilder.Entity("MVC_Project.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MVC_Project.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("MVC_Project.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int>("StarNum")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookID");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MVC_Project.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = "1",
                            OrderDate = new DateTime(2024, 4, 21, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(3839),
                            TotalAmount = 10.99m
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = "2",
                            OrderDate = new DateTime(2024, 4, 20, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(3925),
                            TotalAmount = 25.00m
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = "3",
                            OrderDate = new DateTime(2024, 4, 19, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(3938),
                            TotalAmount = 18.50m
                        },
                        new
                        {
                            OrderId = 4,
                            CustomerId = "4",
                            OrderDate = new DateTime(2024, 4, 18, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(3952),
                            TotalAmount = 32.75m
                        },
                        new
                        {
                            OrderId = 5,
                            CustomerId = "5",
                            OrderDate = new DateTime(2024, 4, 17, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(3960),
                            TotalAmount = 14.99m
                        },
                        new
                        {
                            OrderId = 6,
                            CustomerId = "6",
                            OrderDate = new DateTime(2024, 4, 16, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(3967),
                            TotalAmount = 20.25m
                        },
                        new
                        {
                            OrderId = 7,
                            CustomerId = "7",
                            OrderDate = new DateTime(2024, 4, 15, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(3975),
                            TotalAmount = 27.50m
                        },
                        new
                        {
                            OrderId = 8,
                            CustomerId = "8",
                            OrderDate = new DateTime(2024, 4, 14, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(3983),
                            TotalAmount = 45.75m
                        },
                        new
                        {
                            OrderId = 9,
                            CustomerId = "9",
                            OrderDate = new DateTime(2024, 4, 13, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(3991),
                            TotalAmount = 62.99m
                        },
                        new
                        {
                            OrderId = 10,
                            CustomerId = "10",
                            OrderDate = new DateTime(2024, 4, 12, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(3999),
                            TotalAmount = 28.50m
                        },
                        new
                        {
                            OrderId = 11,
                            CustomerId = "11",
                            OrderDate = new DateTime(2024, 4, 11, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(4006),
                            TotalAmount = 35.99m
                        },
                        new
                        {
                            OrderId = 12,
                            CustomerId = "12",
                            OrderDate = new DateTime(2024, 4, 10, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(4019),
                            TotalAmount = 52.25m
                        },
                        new
                        {
                            OrderId = 13,
                            CustomerId = "13",
                            OrderDate = new DateTime(2024, 4, 9, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(4027),
                            TotalAmount = 75.99m
                        },
                        new
                        {
                            OrderId = 14,
                            CustomerId = "14",
                            OrderDate = new DateTime(2024, 4, 8, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(4035),
                            TotalAmount = 42.75m
                        },
                        new
                        {
                            OrderId = 15,
                            CustomerId = "15",
                            OrderDate = new DateTime(2024, 4, 7, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(4043),
                            TotalAmount = 55.50m
                        },
                        new
                        {
                            OrderId = 16,
                            CustomerId = "12",
                            OrderDate = new DateTime(2024, 4, 6, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(4052),
                            TotalAmount = 38.25m
                        },
                        new
                        {
                            OrderId = 17,
                            CustomerId = "10",
                            OrderDate = new DateTime(2024, 4, 5, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(4060),
                            TotalAmount = 49.99m
                        },
                        new
                        {
                            OrderId = 18,
                            CustomerId = "8",
                            OrderDate = new DateTime(2024, 4, 4, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(4068),
                            TotalAmount = 65.75m
                        },
                        new
                        {
                            OrderId = 19,
                            CustomerId = "6",
                            OrderDate = new DateTime(2024, 4, 3, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(4076),
                            TotalAmount = 80.50m
                        },
                        new
                        {
                            OrderId = 20,
                            CustomerId = "10",
                            OrderDate = new DateTime(2024, 4, 2, 1, 56, 56, 42, DateTimeKind.Local).AddTicks(4088),
                            TotalAmount = 95.25m
                        });
                });

            modelBuilder.Entity("MVC_Project.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            BookId = 1,
                            OrderId = 1,
                            PricePerUnit = 10.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 2,
                            BookId = 2,
                            OrderId = 2,
                            PricePerUnit = 12.50m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 3,
                            BookId = 3,
                            OrderId = 3,
                            PricePerUnit = 9.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 4,
                            BookId = 4,
                            OrderId = 4,
                            PricePerUnit = 12.50m,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 5,
                            BookId = 5,
                            OrderId = 5,
                            PricePerUnit = 11.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 6,
                            BookId = 6,
                            OrderId = 6,
                            PricePerUnit = 14.99m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 7,
                            BookId = 7,
                            OrderId = 7,
                            PricePerUnit = 16.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 8,
                            BookId = 8,
                            OrderId = 8,
                            PricePerUnit = 13.99m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 9,
                            BookId = 9,
                            OrderId = 9,
                            PricePerUnit = 15.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 10,
                            BookId = 10,
                            OrderId = 10,
                            PricePerUnit = 14.50m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 11,
                            BookId = 11,
                            OrderId = 11,
                            PricePerUnit = 11.99m,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 12,
                            BookId = 12,
                            OrderId = 12,
                            PricePerUnit = 10.99m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 13,
                            BookId = 13,
                            OrderId = 13,
                            PricePerUnit = 12.50m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 14,
                            BookId = 14,
                            OrderId = 14,
                            PricePerUnit = 15.99m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 15,
                            BookId = 15,
                            OrderId = 15,
                            PricePerUnit = 12.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 16,
                            BookId = 16,
                            OrderId = 16,
                            PricePerUnit = 9.99m,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 17,
                            BookId = 17,
                            OrderId = 17,
                            PricePerUnit = 10.99m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 18,
                            BookId = 18,
                            OrderId = 18,
                            PricePerUnit = 8.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 19,
                            BookId = 19,
                            OrderId = 19,
                            PricePerUnit = 11.50m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 20,
                            BookId = 20,
                            OrderId = 20,
                            PricePerUnit = 7.99m,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MVC_Project.Book", b =>
                {
                    b.HasOne("MVC_Project.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId");

                    b.HasOne("MVC_Project.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryID");

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MVC_Project.Customer", b =>
                {
                    b.HasOne("MVC_Project.Models.ApplicationUser", "ApplicationUser")
                        .WithOne("Customer")
                        .HasForeignKey("MVC_Project.Customer", "ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("MVC_Project.Models.Review", b =>
                {
                    b.HasOne("MVC_Project.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MVC_Project.Order", b =>
                {
                    b.HasOne("MVC_Project.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MVC_Project.OrderItem", b =>
                {
                    b.HasOne("MVC_Project.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MVC_Project.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MVC_Project.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Project.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MVC_Project.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_Project.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("MVC_Project.Book", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("MVC_Project.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MVC_Project.Models.ApplicationUser", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MVC_Project.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("MVC_Project.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
